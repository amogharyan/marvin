name: Test Suite

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        workspace: [ai-voice]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ${{ matrix.workspace }}/package-lock.json
          
      - name: Install dependencies
        run: npm ci
        working-directory: ${{ matrix.workspace }}
        env:
          NODE_ENV: test
        
      - name: Run linter
        run: npm run lint
        working-directory: ${{ matrix.workspace }}
        continue-on-error: true
        env:
          NODE_ENV: test
        
      - name: Type check
        run: npm run type-check
        working-directory: ${{ matrix.workspace }}
        env:
          NODE_ENV: test
        
      - name: Run tests
        run: npm test
        working-directory: ${{ matrix.workspace }}
        continue-on-error: false
        env:
          NODE_ENV: test
        
      - name: Run tests with coverage
        run: npm test -- --coverage --maxWorkers=2
        working-directory: ${{ matrix.workspace }}
        continue-on-error: true
        env:
          NODE_ENV: test
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
        continue-on-error: true
