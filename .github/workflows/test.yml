name: Test Suite

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        workspace: [ai-voice]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ${{ matrix.workspace }}/package-lock.json
          
      - name: Install dependencies
        run: npm ci
        working-directory: ${{ matrix.workspace }}
        
      - name: Run linter
        run: npm run lint
        working-directory: ${{ matrix.workspace }}
        continue-on-error: true
        
      - name: Type check
        run: npm run type-check
        working-directory: ${{ matrix.workspace }}
        
      - name: Run tests
        run: npm test -- --coverage --maxWorkers=2
        working-directory: ${{ matrix.workspace }}
        continue-on-error: false
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
        continue-on-error: true
        
      - name: Comment test results on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            try {
              const fs = require('fs');
              const path = './coverage/coverage-summary.json';
              
              if (fs.existsSync(path)) {
                const coverage = JSON.parse(fs.readFileSync(path, 'utf8'));
                const total = coverage.total;
                
                const comment = `## Test Results 📊
                
                ✅ Tests completed!
                
                ### Coverage Summary
                - **Statements**: ${total.statements.pct}%
                - **Branches**: ${total.branches.pct}%
                - **Functions**: ${total.functions.pct}%
                - **Lines**: ${total.lines.pct}%
                
                ${total.statements.pct >= 70 ? '✅' : '⚠️'} Coverage threshold: 70%
                `;
                
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: comment
                });
              } else {
                const comment = `## Test Results 📊
                
                ✅ Tests completed!
                
                Coverage report not available.
                `;
                
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: comment
                });
              }
            } catch (error) {
              console.log('Could not create coverage comment:', error.message);
            }
